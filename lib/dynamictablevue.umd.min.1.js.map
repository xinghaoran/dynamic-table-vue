{"version":3,"sources":["webpack://dynamictablevue/./src/utils/util.js","webpack://dynamictablevue/./src/utils/vendor/Export2Excel.js"],"names":["isNumber","val","regPos","regNeg","test","generateArray","table","out","rows","querySelectorAll","ranges","R","length","outRow","row","columns","C","cell","colspan","getAttribute","rowspan","cellValue","innerText","forEach","range","s","r","e","c","i","push","k","datenum","v","date1904","epoch","Date","parse","UTC","sheet_from_array_of_arrays","data","headerLength","ws","alignment","horizontal","vertical","cell_ref","utils","encode_cell","t","z","SSF","_table","encode_range","Workbook","this","SheetNames","Sheets","s2ab","buf","ArrayBuffer","view","Uint8Array","charCodeAt","export_table_to_excel","id","theTable","document","getElementById","oo","ws_name","wb","wbout","write","bookType","bookSST","type","saveAs","Blob","export_json_to_excel","multiHeader","header","filename","merges","autoWidth","sheetName","lastSheet","unshift","item","decode_range","colWidth","map","toString","result","j","writeExcel","processMergeHeader","multiLineNumber","headerLetters","columns2multiHeader","flag","alreadyExist","m","mer","split","alr","column","rowNum","col","children","title","n","before","now"],"mappings":"wmBAIQ,SAASA,EAAUC,GACvB,IAAIC,EAAS,gBACTC,EAAS,qFACb,SAAID,EAAOE,KAAKH,KAAQE,EAAOC,KAAKH,ICFxC,SAASI,EAAcC,GAIrB,IAHA,IAAIC,EAAM,GACNC,EAAOF,EAAMG,iBAAiB,MAC9BC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAKI,SAAUD,EAAG,CAIpC,IAHA,IAAIE,EAAS,GACTC,EAAMN,EAAKG,GACXI,EAAUD,EAAIL,iBAAiB,MAC1BO,EAAI,EAAGA,EAAID,EAAQH,SAAUI,EAAG,CACvC,IAAIC,EAAOF,EAAQC,GACfE,EAAUD,EAAKE,aAAa,WAC5BC,EAAUH,EAAKE,aAAa,WAC5BE,EAAYJ,EAAKK,UA8BrB,GA7BkB,KAAdD,GAAoBA,IAAcA,IAAWA,GAAaA,GAG9DX,EAAOa,SAAQ,SAAUC,GACvB,GAAIb,GAAKa,EAAMC,EAAEC,GAAKf,GAAKa,EAAMG,EAAED,GAAKb,EAAOD,QAAUY,EAAMC,EAAEG,GAAKf,EAAOD,QAAUY,EAAMG,EAAEC,EAC7F,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAMG,EAAEC,EAAIJ,EAAMC,EAAEG,IAAKC,EAAGhB,EAAOiB,KAAK,UAK7DV,GAAWF,KACbE,EAAUA,GAAW,EACrBF,EAAUA,GAAW,EACrBR,EAAOoB,KAAK,CACVL,EAAG,CACDC,EAAGf,EACHiB,EAAGf,EAAOD,QAEZe,EAAG,CACDD,EAAGf,EAAIS,EAAU,EACjBQ,EAAGf,EAAOD,OAASM,EAAU,MAMnCL,EAAOiB,KAAmB,KAAdT,EAAmBA,EAAY,MAGvCH,EACF,IAAK,IAAIa,EAAI,EAAGA,EAAIb,EAAU,IAAKa,EAAGlB,EAAOiB,KAAK,MAEtDvB,EAAIuB,KAAKjB,GAEX,MAAO,CAACN,EAAKG,GAGf,SAASsB,EAAQC,EAAGC,GACdA,IAAUD,GAAK,MACnB,IAAIE,EAAQC,KAAKC,MAAMJ,GACvB,OAAQE,EAAQ,IAAIC,KAAKA,KAAKE,IAAI,KAAM,GAAI,MAAQ,MAGtD,SAASC,EAA2BC,EAAMC,GAaxC,IAZA,IAAIC,EAAK,GACLlB,EAAQ,CACVC,EAAG,CACDG,EAAG,IACHF,EAAG,KAELC,EAAG,CACDC,EAAG,EACHF,EAAG,IAIEf,EAAI,EAAGA,GAAK6B,EAAK5B,SAAUD,EAClC,IAAK,IAAIK,EAAI,EAAGA,GAAKwB,EAAK7B,GAAGC,SAAUI,EAAG,CACpCQ,EAAMC,EAAEC,EAAIf,IAAGa,EAAMC,EAAEC,EAAIf,GAC3Ba,EAAMC,EAAEG,EAAIZ,IAAGQ,EAAMC,EAAEG,EAAIZ,GAC3BQ,EAAMG,EAAED,EAAIf,IAAGa,EAAMG,EAAED,EAAIf,GAC3Ba,EAAMG,EAAEC,EAAIZ,IAAGQ,EAAMG,EAAEC,EAAIZ,GAC5BhB,EAASwC,EAAK7B,GAAGK,MAClBwB,EAAK7B,GAAGK,IAAM,GAEhB,IAAIC,EAAO,CACTgB,EAAGO,EAAK7B,GAAGK,GACXS,EAAG,CACDkB,UAAW,CAITC,WAAY,SACZC,SAAU,YAKhB,GAAc,MAAV5B,EAAKgB,EAAT,CACA,IAAIa,EAAW,IAAKC,MAAMC,YAAY,CACpCpB,EAAGZ,EACHU,EAAGf,IAGiB,kBAAXM,EAAKgB,EAAgBhB,EAAKgC,EAAI,IACd,mBAAXhC,EAAKgB,EAAiBhB,EAAKgC,EAAI,IACtChC,EAAKgB,aAAaG,MACzBnB,EAAKgC,EAAI,IACThC,EAAKiC,EAAI,IAAKC,IAAIC,OAAO,IACzBnC,EAAKgB,EAAID,EAAQf,EAAKgB,IACjBhB,EAAKgC,EAAI,IAEhBP,EAAGI,GAAY7B,GAInB,OADIO,EAAMC,EAAEG,EAAI,MAAUc,EAAG,QAAU,IAAKK,MAAMM,aAAa7B,IACxDkB,EAGT,SAASY,IACP,KAAMC,gBAAgBD,GAAW,OAAO,IAAIA,EAC5CC,KAAKC,WAAa,GAClBD,KAAKE,OAAS,GAGhB,SAASC,EAAKjC,GAGZ,IAFA,IAAIkC,EAAM,IAAIC,YAAYnC,EAAEb,QACxBiD,EAAO,IAAIC,WAAWH,GACjB9B,EAAI,EAAGA,GAAKJ,EAAEb,SAAUiB,EAAGgC,EAAKhC,GAAuB,IAAlBJ,EAAEsC,WAAWlC,GAC3D,OAAO8B,EAGF,SAASK,EAAsBC,GACpC,IAAIC,EAAWC,SAASC,eAAeH,GACnCI,EAAKhE,EAAc6D,GACnBxD,EAAS2D,EAAG,GAGZ7B,EAAO6B,EAAG,GACVC,EAAU,UAEVC,EAAK,IAAIjB,EACXZ,EAAKH,EAA2BC,GAIlCE,EAAG,WAAahC,EAGhB6D,EAAGf,WAAW1B,KAAKwC,GACnBC,EAAGd,OAAOa,GAAW5B,EAErB,IAAI8B,EAAQ,IAAKC,MAAMF,EAAI,CACzBG,SAAU,OACVC,SAAS,EACTC,KAAM,WAGRC,OAAO,IAAIC,KAAK,CAACpB,EAAKc,IAAS,CAC7BI,KAAM,6BACJ,aA7JN,EAAQ,QAgKR,IAAI,EAAK,IAAItB,EACN,SAASyB,GAAqB,YACnCC,EAAc,GAAE,OAChBC,EAAM,KACNzC,EAAI,SACJ0C,EAAQ,OACRC,EAAS,GAAE,UACXC,GAAY,EAAI,SAChBV,EAAW,OAAM,UACjBW,EAAY,SAAQ,UACpBC,GAAY,GACV,IAEFJ,EAAWA,GAAY,aACvB1C,EAAO,IAAIA,GACU,IAAlByC,EAAOrE,QACR4B,EAAK+C,QAAQN,GAIf,IAAK,IAAIpD,EAAImD,EAAYpE,OAAS,EAAGiB,GAAK,EAAGA,IAC3CW,EAAK+C,QAAQP,EAAYnD,IAG3B,IAAIyC,EAAUe,EACV3C,EAAKH,EAA2BC,EAAMA,EAAK5B,OAASoE,EAAYpE,QASpE,GAPIuE,EAAOvE,OAAS,IACb8B,EAAG,aAAYA,EAAG,WAAa,IACpCyC,EAAO5D,QAAQiE,IACb9C,EAAG,WAAWZ,KAAK,IAAKiB,MAAM0C,aAAaD,OAI3CJ,EAAW,CAEb,MAAMM,EAAWlD,EAAKmD,IAAI7E,GAAOA,EAAI6E,IAAI1F,GAE5B,MAAPA,EACK,CACL,IAAO,IAIFA,EAAI2F,WAAW7B,WAAW,GAAK,IAC/B,CACL,IAA+B,EAAxB9D,EAAI2F,WAAWhF,QAGjB,CACL,IAAOX,EAAI2F,WAAWhF,UAK5B,IAAIiF,EAASH,EAAS,GACtB,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAS9E,OAAQiB,IACnC,IAAK,IAAIiE,EAAI,EAAGA,EAAIJ,EAAS7D,GAAGjB,OAAQkF,IAClCD,EAAOC,GAAG,OAASJ,EAAS7D,GAAGiE,GAAG,SACpCD,EAAOC,GAAG,OAASJ,EAAS7D,GAAGiE,GAAG,QAIxCpD,EAAG,SAAWmD,EAIhB,EAAGrC,WAAW1B,KAAKwC,GACnB,EAAGb,OAAOa,GAAW5B,EAElB4C,GACDS,EAAWb,EAAUR,GAIzB,SAASqB,EAAWb,EAAUR,GAC5B,IAAIF,EAAQ,IAAKC,MAAM,EAAI,CACzBC,SAAUA,EACVC,SAAS,EACTC,KAAM,WAERC,OAAO,IAAIC,KAAK,CAACpB,EAAKc,IAAS,CAC7BI,KAAM,6BACJ,GAAGM,KAAYR,KACnB,EAAK,IAAIpB,EAGJ,SAAS0C,EAAmBC,EAAiBlF,EAASiE,EAAakB,EAAef,GACvF,IAAK,IAAItD,EAAI,EAAGA,EAAIoE,EAAiBpE,IACnCmD,EAAYlD,KAAK,IAEnB,IAAK,IAAID,EAAI,EAAGA,EAAId,EAAQH,OAAQiB,IAClCsE,EAAoBpF,EAAQc,GAAImD,EAAa,EAAGiB,GAElD,IAAK,IAAIpE,EAAI,EAAGA,EAAImD,EAAYpE,OAAQiB,IACtC,IAAK,IAAIiE,EAAI,EAAGA,EAAId,EAAY,GAAGpE,OAAQkF,IACzC,GAA0B,KAAtBd,EAAYnD,GAAGiE,GAAW,CAC5B,IAAIM,GAAO,EACX,IAAK,IAAIxE,EAAIC,EAAI,EAAGD,GAAK,EAAGA,IAC1B,GAA0B,KAAtBoD,EAAYpD,GAAGkE,GAAW,CAC5BX,EAAOrD,KAAKoE,EAAcJ,IAAMlE,EAAI,GAAK,IAAMsE,EAAcJ,IAAMjE,EAAI,IACvEuE,GAAO,EACP,MAGJ,IAAKA,EACH,IAAK,IAAI1E,EAAIoE,EAAI,EAAGpE,GAAK,EAAGA,IAC1B,GAA0B,KAAtBsD,EAAYnD,GAAGH,GAAW,CAC5ByD,EAAOrD,KAAKoE,EAAcxE,IAAMG,EAAI,GAAK,IAAMqE,EAAcJ,IAAMjE,EAAI,IACvE,OAOZ,MAAMwE,EAAe,GACrB,IAAK,IAAIC,EAAInB,EAAOvE,OAAS,EAAG0F,GAAK,EAAGA,IAAK,CAC3C,IAAIF,GAAO,EACX,IAAK,IAAIN,EAAI,EAAGA,EAAIO,EAAazF,OAAQkF,IAAK,CAC5C,MAAMS,EAAMpB,EAAOmB,GAAGE,MAAM,KACtBC,EAAMJ,EAAaP,GAAGU,MAAM,KAClC,GAAID,EAAI,KAAOE,EAAI,GAAI,CACrBL,GAAO,EACP,OAGCA,GACHC,EAAavE,KAAKqD,EAAOmB,IAG7B,OAAOD,EAGT,SAASF,EAAqBO,EAAQ1B,EAAa2B,EAAQV,GACzD,MAAMW,EAAMF,EACZ,GAA4B,qBAAjBE,EAAIC,SAA0B,CACvC7B,EAAY2B,GAAQ7E,KAAK8E,EAAIE,OAC7BH,IACA,IAAK,IAAII,EAAI,EAAGA,EAAIH,EAAIC,SAASjG,OAAQmG,IACvCZ,EAAoBS,EAAIC,SAASE,GAAI/B,EAAa2B,EAAQV,OAEvD,CACLjB,EAAY2B,GAAQ7E,KAAK8E,EAAIE,OAC7B,IAAK,IAAIhB,EAAI,EAAGA,EAAIa,EAAQb,IAAK,CAC/B,MAAMkB,EAAShC,EAAYc,GAAGlF,OACxBqG,EAAMjC,EAAY2B,GAAQ/F,OAChC,GAAIoG,IAAWC,EACb,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAMD,EAAQD,IAChC/B,EAAYc,GAAGhE,KAAK,IAI1B,IAAK,IAAIgE,EAAIa,EAAS,EAAGb,EAAIG,EAAiBH,IAC5Cd,EAAYc,GAAGhE,KAAK","file":"dynamictablevue.umd.min.1.js","sourcesContent":["/**\r\n * Determine if it is a number\r\n * @param val\r\n */\r\n export function isNumber (val) {\r\n    var regPos = /^\\d+(\\.\\d+)?$/ // 非负浮点数\r\n    var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/ // 负浮点数\r\n    if (regPos.test(val) || regNeg.test(val)) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }","/* eslint-disable */\r\nrequire('script-loader!file-saver');\r\nimport XLSX from 'xlsx-style'\r\nimport {isNumber} from '@/utils/util'\r\n\r\nfunction generateArray(table) {\r\n  var out = [];\r\n  var rows = table.querySelectorAll('tr');\r\n  var ranges = [];\r\n  for (var R = 0; R < rows.length; ++R) {\r\n    var outRow = [];\r\n    var row = rows[R];\r\n    var columns = row.querySelectorAll('td');\r\n    for (var C = 0; C < columns.length; ++C) {\r\n      var cell = columns[C];\r\n      var colspan = cell.getAttribute('colspan');\r\n      var rowspan = cell.getAttribute('rowspan');\r\n      var cellValue = cell.innerText;\r\n      if (cellValue !== \"\" && cellValue == +cellValue) cellValue = +cellValue;\r\n\r\n      //Skip ranges\r\n      ranges.forEach(function (range) {\r\n        if (R >= range.s.r && R <= range.e.r && outRow.length >= range.s.c && outRow.length <= range.e.c) {\r\n          for (var i = 0; i <= range.e.c - range.s.c; ++i) outRow.push(null);\r\n        }\r\n      });\r\n\r\n      //Handle Row Span\r\n      if (rowspan || colspan) {\r\n        rowspan = rowspan || 1;\r\n        colspan = colspan || 1;\r\n        ranges.push({\r\n          s: {\r\n            r: R,\r\n            c: outRow.length\r\n          },\r\n          e: {\r\n            r: R + rowspan - 1,\r\n            c: outRow.length + colspan - 1\r\n          }\r\n        });\r\n      };\r\n\r\n      //Handle Value\r\n      outRow.push(cellValue !== \"\" ? cellValue : null);\r\n\r\n      //Handle Colspan\r\n      if (colspan)\r\n        for (var k = 0; k < colspan - 1; ++k) outRow.push(null);\r\n    }\r\n    out.push(outRow);\r\n  }\r\n  return [out, ranges];\r\n};\r\n\r\nfunction datenum(v, date1904) {\r\n  if (date1904) v += 1462;\r\n  var epoch = Date.parse(v);\r\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);\r\n}\r\n\r\nfunction sheet_from_array_of_arrays(data, headerLength) {\r\n  var ws = {};\r\n  var range = {\r\n    s: {\r\n      c: 10000000,\r\n      r: 10000000\r\n    },\r\n    e: {\r\n      c: 0,\r\n      r: 0\r\n    }\r\n  };\r\n  \r\n  for (var R = 0; R != data.length; ++R) {\r\n    for (var C = 0; C != data[R].length; ++C) {\r\n      if (range.s.r > R) range.s.r = R;\r\n      if (range.s.c > C) range.s.c = C;\r\n      if (range.e.r < R) range.e.r = R;\r\n      if (range.e.c < C) range.e.c = C;\r\n      if(isNumber(data[R][C])){\r\n        data[R][C] -= 0\r\n      }\r\n      var cell = {\r\n        v: data[R][C],\r\n        s: {\r\n          alignment: {\r\n            /// 自动换行\r\n            // wrapText: 1,\r\n              // 居中\r\n            horizontal: \"center\",\r\n            vertical: \"center\",\r\n            // indent: 0\r\n          }\r\n        }\r\n      };\r\n      if (cell.v == null) continue;\r\n      var cell_ref = XLSX.utils.encode_cell({\r\n        c: C,\r\n        r: R\r\n      });\r\n\r\n      if (typeof cell.v === 'number') cell.t = 'n';\r\n      else if (typeof cell.v === 'boolean') cell.t = 'b';\r\n      else if (cell.v instanceof Date) {\r\n        cell.t = 'n';\r\n        cell.z = XLSX.SSF._table[14];\r\n        cell.v = datenum(cell.v);\r\n      } else cell.t = 's';\r\n\r\n      ws[cell_ref] = cell;\r\n    }\r\n  }\r\n  if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);\r\n  return ws;\r\n}\r\n\r\nfunction Workbook() {\r\n  if (!(this instanceof Workbook)) return new Workbook();\r\n  this.SheetNames = [];\r\n  this.Sheets = {};\r\n}\r\n\r\nfunction s2ab(s) {\r\n  var buf = new ArrayBuffer(s.length);\r\n  var view = new Uint8Array(buf);\r\n  for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\r\n  return buf;\r\n}\r\n\r\nexport function export_table_to_excel(id) {\r\n  var theTable = document.getElementById(id);\r\n  var oo = generateArray(theTable);\r\n  var ranges = oo[1];\r\n\r\n  /* original data */\r\n  var data = oo[0];\r\n  var ws_name = \"SheetJS\";\r\n\r\n  var wb = new Workbook(),\r\n    ws = sheet_from_array_of_arrays(data);\r\n\r\n  /* add ranges to worksheet */\r\n  // ws['!cols'] = ['apple', 'banan'];\r\n  ws['!merges'] = ranges;\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: 'xlsx',\r\n    bookSST: false,\r\n    type: 'binary'\r\n  });\r\n\r\n  saveAs(new Blob([s2ab(wbout)], {\r\n    type: \"application/octet-stream\"\r\n  }), \"test.xlsx\")\r\n}\r\n\r\nvar wb = new Workbook();\r\nexport function export_json_to_excel({\r\n  multiHeader = [],\r\n  header,\r\n  data,\r\n  filename,\r\n  merges = [],\r\n  autoWidth = true,\r\n  bookType = 'xlsx',\r\n  sheetName = \"Sheet1\",\r\n  lastSheet = true\r\n} = {}) {\r\n  /* original data */\r\n  filename = filename || 'excel-list'\r\n  data = [...data]\r\n  if(header.length !== 0){\r\n    data.unshift(header);\r\n  }\r\n  \r\n\r\n  for (let i = multiHeader.length - 1; i > -1; i--) {\r\n    data.unshift(multiHeader[i])\r\n  }\r\n\r\n  var ws_name = sheetName;\r\n  var ws = sheet_from_array_of_arrays(data, data.length + multiHeader.length);\r\n\r\n  if (merges.length > 0) {\r\n    if (!ws['!merges']) ws['!merges'] = [];\r\n    merges.forEach(item => {\r\n      ws['!merges'].push(XLSX.utils.decode_range(item))\r\n    })\r\n  }\r\n\r\n  if (autoWidth) {\r\n    /*设置worksheet每列的最大宽度*/\r\n    const colWidth = data.map(row => row.map(val => {\r\n      /*先判断是否为null/undefined*/\r\n      if (val == null) {\r\n        return {\r\n          'wch': 10\r\n        };\r\n      }\r\n      /*再判断是否为中文*/\r\n      else if (val.toString().charCodeAt(0) > 255) {\r\n        return {\r\n          'wch': val.toString().length * 2\r\n        };\r\n      } else {\r\n        return {\r\n          'wch': val.toString().length\r\n        };\r\n      }\r\n    }))\r\n    /*以第一行为初始值*/\r\n    let result = colWidth[0];\r\n    for (let i = 1; i < colWidth.length; i++) {\r\n      for (let j = 0; j < colWidth[i].length; j++) {\r\n        if (result[j]['wch'] < colWidth[i][j]['wch']) {\r\n          result[j]['wch'] = colWidth[i][j]['wch'];\r\n        }\r\n      }\r\n    }\r\n    ws['!cols'] = result;\r\n  }\r\n\r\n  /* add worksheet to workbook */\r\n  wb.SheetNames.push(ws_name);\r\n  wb.Sheets[ws_name] = ws;\r\n\r\n  if(lastSheet){\r\n    writeExcel(filename, bookType)\r\n  }\r\n}\r\n\r\nfunction writeExcel(filename, bookType){\r\n  var wbout = XLSX.write(wb, {\r\n    bookType: bookType,\r\n    bookSST: false,\r\n    type: 'binary'\r\n  });\r\n  saveAs(new Blob([s2ab(wbout)], {\r\n    type: \"application/octet-stream\"\r\n  }), `${filename}.${bookType}`);\r\n  wb = new Workbook()\r\n}\r\n\r\nexport function processMergeHeader(multiLineNumber, columns, multiHeader, headerLetters, merges){\r\n  for (let i = 0; i < multiLineNumber; i++) {\r\n    multiHeader.push([])\r\n  }\r\n  for (let i = 0; i < columns.length; i++) {\r\n    columns2multiHeader(columns[i], multiHeader, 0, multiLineNumber)\r\n  }\r\n  for (let i = 0; i < multiHeader.length; i++) {\r\n    for (let j = 0; j < multiHeader[0].length; j++) {\r\n      if (multiHeader[i][j] === '') {\r\n        let flag = false\r\n        for (let c = i - 1; c >= 0; c--) {\r\n          if (multiHeader[c][j] !== '') {\r\n            merges.push(headerLetters[j] + (c + 1) + ':' + headerLetters[j] + (i + 1))\r\n            flag = true\r\n            break\r\n          }\r\n        }\r\n        if (!flag) {\r\n          for (let r = j - 1; r >= 0; r--) {\r\n            if (multiHeader[i][r] !== '') {\r\n              merges.push(headerLetters[r] + (i + 1) + ':' + headerLetters[j] + (i + 1))\r\n              break\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const alreadyExist = []\r\n  for (let m = merges.length - 1; m >= 0; m--) {\r\n    let flag = false\r\n    for (let j = 0; j < alreadyExist.length; j++) {\r\n      const mer = merges[m].split(':')\r\n      const alr = alreadyExist[j].split(':')\r\n      if (mer[0] === alr[0]) {\r\n        flag = true\r\n        break\r\n      }\r\n    }\r\n    if (!flag) {\r\n      alreadyExist.push(merges[m])\r\n    }\r\n  }\r\n  return alreadyExist\r\n}\r\n\r\nfunction columns2multiHeader (column, multiHeader, rowNum, multiLineNumber) {\r\n  const col = column\r\n  if (typeof col.children !== 'undefined') {\r\n    multiHeader[rowNum].push(col.title)\r\n    rowNum++\r\n    for (let n = 0; n < col.children.length; n++) {\r\n      columns2multiHeader(col.children[n], multiHeader, rowNum, multiLineNumber)\r\n    }\r\n  } else {\r\n    multiHeader[rowNum].push(col.title)\r\n    for (let j = 0; j < rowNum; j++) {\r\n      const before = multiHeader[j].length\r\n      const now = multiHeader[rowNum].length\r\n      if (before !== now) {\r\n        for (let n = 0; n < now - before; n++) {\r\n          multiHeader[j].push('')\r\n        }\r\n      }\r\n    }\r\n    for (let j = rowNum + 1; j < multiLineNumber; j++) {\r\n      multiHeader[j].push('')\r\n    }\r\n  }\r\n}"],"sourceRoot":""}